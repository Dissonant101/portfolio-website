
type Resume {
  id: ID!
  name: String!
  style: String
  layout: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelResumeConnection {
  items: [Resume]!
  nextToken: String
}

input ModelResumeFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  style: ModelStringInput
  layout: ModelStringInput
  and: [ModelResumeFilterInput]
  or: [ModelResumeFilterInput]
  not: ModelResumeFilterInput
}

type Query {
  getResume(id: ID!): Resume
  listResumes(filter: ModelResumeFilterInput, limit: Int, nextToken: String): ModelResumeConnection
}

input ModelResumeConditionInput {
  name: ModelStringInput
  style: ModelStringInput
  layout: ModelStringInput
  and: [ModelResumeConditionInput]
  or: [ModelResumeConditionInput]
  not: ModelResumeConditionInput
}

input CreateResumeInput {
  id: ID
  name: String!
  style: String
  layout: String
}

input UpdateResumeInput {
  id: ID!
  name: String
  style: String
  layout: String
}

input DeleteResumeInput {
  id: ID!
}

type Mutation {
  createResume(input: CreateResumeInput!, condition: ModelResumeConditionInput): Resume
  updateResume(input: UpdateResumeInput!, condition: ModelResumeConditionInput): Resume
  deleteResume(input: DeleteResumeInput!, condition: ModelResumeConditionInput): Resume
}

type Subscription {
  onCreateResume: Resume @aws_subscribe(mutations: ["createResume"])
  onUpdateResume: Resume @aws_subscribe(mutations: ["updateResume"])
  onDeleteResume: Resume @aws_subscribe(mutations: ["deleteResume"])
}

